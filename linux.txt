#include <stdio.h>
#include <stdlib.h>
#include <unistd.h>
#include <string.h>
#include <errno.h>

#define STACK_SIZE 100
#define PATH_MAX 4096

typedef struct {
    char *dirs[STACK_SIZE];
    int top;
} DirStack;

void init_stack(DirStack *stack) {
    stack->top = -1;
}

int is_empty(DirStack *stack) {
    return stack->top == -1;
}

int is_full(DirStack *stack) {
    return stack->top == STACK_SIZE - 1;
}

int push(DirStack *stack, const char *dir) {
    if (is_full(stack)) {
        fprintf(stderr, "Error: directory stack overflow\n");
        return -1;
    }
    stack->dirs[++stack->top] = strdup(dir);
    return 0;
}

char *pop(DirStack *stack) {
    if (is_empty(stack)) {
        fprintf(stderr, "Error: directory stack underflow\n");
        return NULL;
    }
    char *dir = stack->dirs[stack->top];
    stack->dirs[stack->top--] = NULL;
    return dir;
}

void free_stack(DirStack *stack) {
    while (!is_empty(stack)) {
        free(pop(stack));
    }
}

void print_usage(const char *prog_name) {
    fprintf(stderr, "Usage: %s pushd <dir> | popd\n", prog_name);
}

int main(int argc, char *argv[]) {
    static DirStack dir_stack;
    static int initialized = 0;

    if (!initialized) {
        init_stack(&dir_stack);
        initialized = 1;
    }

    if (argc < 2) {
        print_usage(argv[0]);
        return 1;
    }

    if (strcmp(argv[1], "pushd") == 0) {
        if (argc < 3) {
            print_usage(argv[0]);
            return 1;
        }

        char cwd[PATH_MAX];
        if (getcwd(cwd, sizeof(cwd)) == NULL) {
            perror("getcwd");
            return 1;
        }

        if (push(&dir_stack, cwd) == -1) {
            return 1;
        }

        if (chdir(argv[2]) == -1) {
            perror("chdir");
            pop(&dir_stack);  // Rollback the push on failure
            return 1;
        }

        printf("Directory changed to %s\n", argv[2]);

    } else if (strcmp(argv[1], "popd") == 0) {
        char *dir = pop(&dir_stack);
        if (dir == NULL) {
            return 1;
        }

        if (chdir(dir) == -1) {
            perror("chdir");
            free(dir);
            return 1;
        }

        printf("Directory changed to %s\n", dir);
        free(dir);

    } else {
        print_usage(argv[0]);
        return 1;
    }

    return 0;
}
